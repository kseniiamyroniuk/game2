// –î–æ–¥–∞—î–º–æ –∑–º—ñ–Ω–Ω—É –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É
let levelProgress = {
    1: false,
    2: false,
    3: false,
    'sport': false,
    4: false
};

function toggleLevel(levelNum) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –Ω–µ —Ä—É—Ö–∞–Ω–∫–∞
    if (levelNum === 'sport') {
        if (!levelProgress[3]) { // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø—Ä–æ–π–¥–µ–Ω–∏–π 3-–π —Ä—ñ–≤–µ–Ω—å
            alert('–°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–π–¥—ñ—Ç—å –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å!');
            return;
        }
    } else { //—è–∫—â–æ –Ω–µ —Ä—É—Ö–∞–Ω–∫–∞, –∞ –∑–≤–∏—á–∞–π–Ω–∏–π —Ä—ñ–≤–µ–Ω—å
        if (levelNum > 1 && !levelProgress[levelNum - 1]) {
            alert('–°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–π–¥—ñ—Ç—å –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å!');
            return;
        }
    }
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ ID –¥–ª—è —Ä—É—Ö–∞–Ω–∫–∏ —Ç–∞ —ñ–Ω—à–∏—Ö —Ä—ñ–≤–Ω—ñ–≤ (—è–∫ —É html)
    const contentId = levelNum === 'sport' ? 'sport' : `level${levelNum}`;
    const content = document.getElementById(contentId);
    //–¢–æ–±—Ç–æ –∫–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä—ñ–≤–Ω—è:
    //–Ø–∫—â–æ —Ä—ñ–≤–µ–Ω—å –±—É–≤ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π - –≤—ñ–Ω –∑'—è–≤–∏—Ç—å—Å—è
    //–Ø–∫—â–æ —Ä—ñ–≤–µ–Ω—å –±—É–≤ –ø–æ–∫–∞–∑–∞–Ω–∏–π - –≤—ñ–Ω –ø—Ä–∏—Ö–æ–≤–∞—î—Ç—å—Å—è
    content.classList.toggle('active');
}

function startGame(levelNum) {
    const gameArea = document.getElementById(`gameArea${levelNum}`);
    gameArea.classList.add('active');
    window[`startLevel${levelNum}`](gameArea);
}

function startLevel1(gameArea) {
    const images = [
        { src: 'images/yellow-balloon.png', isYellow: true }, 
        { src: 'images/blue-balloon.png', isYellow: false },
        { src: 'images/yellow-ball.png', isYellow: true },
        { src: 'images/red-ball.png', isYellow: false },
        { src: 'images/red-apple.png', isYellow: false }, 
        { src: 'images/yellow-lemon.png', isYellow: true }  
    ];
    
    let correctClicks = 0;
    const totalYellowItems = images.filter(img => img.isYellow).length; // –º–∞—î –±—É—Ç–∏ 3
    
    images.forEach(img => {
        const imgElement = document.createElement('img');
        imgElement.src = img.src;
        imgElement.classList.add('game-item', 'level1-item');
        imgElement.dataset.isYellow = img.isYellow;
        
        imgElement.addEventListener('click', function() {
            if (this.classList.contains('correct')) return;
            // –∫–ª–∞—Å correct –≤—ñ–¥—Ä–∞—Ö–æ–≤—É—î —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –≤–∏–±—Ä–∞–≤ —Ü—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å, —â–æ–± –Ω–µ –∑–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ —ó—ó —è–∫ –Ω–æ–≤—É

            if(img.isYellow) {
                this.classList.add('correct');
                showGnomeSpeech('–ú–æ–ª–æ–¥–µ—Ü—å!!');
                correctClicks++;
                
                if (correctClicks === totalYellowItems) {
                    setTimeout(() => {
                        celebrateWin(1);
                    }, 500);
                }
            } else {
                this.classList.add('wrong');
                showGnomeSpeech('–¶–µ –Ω–µ –∂–æ–≤—Ç–∏–π. –°–ø—Ä–æ–±—É–π —â–µ!');
                setTimeout(() => this.classList.remove('wrong'), 500);
            }
        });
        gameArea.appendChild(imgElement);
    });
}

function startLevel2(gameArea) {
    // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–æ–∑–º—ñ—Ä–∏ –µ–∫—Ä–∞–Ω—É
    const screenWidth = window.innerWidth;
    
    // –û–±–∏—Ä–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–æ–∑–º—ñ—Ä—É –µ–∫—Ä–∞–Ω—É
    const items = screenWidth >= 1200 ? [
        // –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –µ–∫—Ä–∞–Ω—ñ–≤
        { src: 'images/rock1.png', isYellow: false, top: '8%', left: '37%', width: '130px' },
        { src: 'images/rock2.png', isYellow: false, top: '26%', left: '24%', width: '50px' },
        { src: 'images/rock3.png', isYellow: false, top: '70%', left: '24%', width: '160px' },
        { src: 'images/rock4.png', isYellow: false, top: '70%', left: '55%', width: '120px' },

        { src: 'images/seed1.png', isYellow: true, top: '2%', left: '55%', width: '70px' },
        { src: 'images/seed2.png', isYellow: true, top: '44%', left: '24%', width: '60px' },
        { src: 'images/seed3.png', isYellow: true, top: '37%', left: '69%', width: '70px' },
        { src: 'images/seed4.png', isYellow: true, top: '55%', left: '52%', width: '60px' },
        { src: 'images/seed5.png', isYellow: true, top: '65%', left: '37%', width: '60px' },
        { src: 'images/seed6.png', isYellow: true, top: '72%', left: '46%', width: '60px' },
        { src: 'images/seed7.png', isYellow: true, top: '82%', left: '40%', width: '50px' },
        { src: 'images/seed8.png', isYellow: true, top: '67%', left: '70%', width: '50px' },
        { src: 'images/seed9.png', isYellow: true, top: '77%', left: '67%', width: '50px' },
    ] : [
       /////////// –¥–æ–¥–∞—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –µ–∫—Ä–∞–Ω—ñ–≤
    ];
    
    let correctClicks = 0;
    const totalYellowItems = items.filter(item => item.isYellow).length;
    
    items.forEach(item => {
        const itemElement = document.createElement('img');
        itemElement.src = item.src;
        itemElement.classList.add('game-item', 'level2-item');
        itemElement.style.top = item.top;
        itemElement.style.left = item.left;
        itemElement.style.width = item.width;
        
        itemElement.addEventListener('click', function() {
            if (this.classList.contains('correct')) return;

            if(item.isYellow) {
                this.classList.add('correct');
                this.style.transform = 'scale(0)';
                showGnomeSpeech('–ú–æ–ª–æ–¥–µ—Ü—å! –¢–∏ –∑–Ω–∞–π—à–æ–≤ –∑–µ—Ä–Ω—è—Ç–∫–æ!');
                correctClicks++;
                
                if (correctClicks === totalYellowItems) {
                    setTimeout(() => {
                        celebrateWin(2);
                    }, 500);
                }
            } else {
                this.classList.add('wrong');
                showGnomeSpeech('–¶–µ –∫–∞–º—ñ–Ω—á–∏–∫, –∞ –Ω–µ –∑–µ—Ä–Ω—è—Ç–∫–æ. –°–ø—Ä–æ–±—É–π —â–µ!');
                setTimeout(() => {
                    this.classList.remove('wrong');
                }, 500);
            }
        });
        const container = document.querySelector('.level2-container');
        container.appendChild(itemElement); 
        gameArea.appendChild(container);
    });
}

function startLevel3(gameArea) {
    const items = [
        { src: 'images/red-flower1.png', isYellow: false, top: '54%', left: '25%', width: '140px' },
        { src: 'images/yellow-flower1.png', isYellow: true, top: '57%', left: '39%', width: '100px' },
        { src: 'images/blue-flower1.png', isYellow: false, top: '60%', left: '52%', width: '110px' },
        { src: 'images/yellow-flower2.png', isYellow: true, top: '40%', left: '58%', width: '186px' },
    ];
    
    let correctClicks = 0;
    const totalYellowItems = items.filter(item => item.isYellow).length;
    
    items.forEach(item => {
        const itemElement = document.createElement('img');
        itemElement.src = item.src;
        itemElement.classList.add('game-item', 'level3-item');
        itemElement.style.top = item.top;
        itemElement.style.left = item.left;
        itemElement.style.width = item.width;
        
        itemElement.addEventListener('click', function() {
            if (this.classList.contains('correct')) return;

            if(item.isYellow) {
                this.classList.add('correct');
                showGnomeSpeech('–ú–æ–ª–æ–¥–µ—Ü—å! –ë–¥–∂—ñ–ª–∫–∞ –∑—ñ–±—Ä–∞–ª–∞ –Ω–µ–∫—Ç–∞—Ä!');
                correctClicks++;
                
                if (correctClicks === totalYellowItems) {
                    setTimeout(() => {
                        celebrateWin(3);
                    }, 500);
                }
            } else {
                this.classList.add('wrong');
                showGnomeSpeech('–û–π! –¶–µ –Ω–µ –∂–æ–≤—Ç–∞ –∫–≤—ñ—Ç–æ—á–∫–∞!');
                setTimeout(() => {
                    this.classList.remove('wrong');
                }, 500);
            }
        });
        gameArea.appendChild(itemElement);
    });
}

function startLevel4(gameArea) {
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ canvas
    const canvas = new fabric.Canvas('coloringCanvas', {
        width: 500,
        height: 500,
        isDrawingMode: true
    });

    // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Ä–æ–∑–º—ñ—Ä –ø–µ–Ω–∑–ª–∏–∫–∞
    canvas.freeDrawingBrush.width = 70;

    // –î–æ–¥–∞—î–º–æ —Ñ–æ–Ω–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    fabric.Image.fromURL('images/outline.png', function(img) {
        img.scaleToWidth(canvas.width);
        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));
    });

    // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –¥–ª—è –ø–∞–ª—ñ—Ç—Ä–∏
    gameArea.querySelector('.color-palette').addEventListener('click', e => {
        const colorOption = e.target.closest('.color-option');
        if (!colorOption) return;

        // –û–Ω–æ–≤–ª—é—î–º–æ –≤–∏–±—Ä–∞–Ω–∏–π –∫–æ–ª—ñ—Ä
        document.querySelector('.color-option.selected')?.classList.remove('selected');
        colorOption.classList.add('selected');

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–ª—ñ—Ä –ø–µ–Ω–∑–ª–∏–∫–∞
        const {r, g, b} = hexToRgb(colorOption.dataset.color);
        canvas.freeDrawingBrush.color = `rgba(${r}, ${g}, ${b}, 0.9)`;
    });

    // –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    gameArea.querySelector('.complete-btn').addEventListener('click', () => {
        celebrateWin(4)
    });
}

function celebrateWin(levelNum) {
    // –ó–≤–∏—á–∞–π–Ω–µ —Å–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –≤—Å—ñ—Ö —Ä—ñ–≤–Ω—ñ–≤
    confetti({
        particleCount: 100,
        spread: 70,
        origin: { y: 0.9 },
        gravity: 0.8,
        startVelocity: 45
    });

    showGnomeSpeech('–í—ñ—Ç–∞—é! –†—ñ–≤–µ–Ω—å –ø—Ä–æ–π–¥–µ–Ω–æ! üéâ');
    levelProgress[levelNum] = true;
    updateLevelButtons();
    
    // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–µ —Å–≤—è—Ç–∫—É–≤–∞–Ω–Ω—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏
    if (levelNum === 4) {
        setTimeout(() => {
            // –í–µ–ª–∏–∫–∏–π —Å–∞–ª—é—Ç
            for (let i = 0; i < 5; i++) {
                setTimeout(() => {
                    confetti({
                        particleCount: 200,
                        spread: 100,
                        origin: { y: 0.9 },
                        colors: ['#FFD700', '#FFA500', '#FF4136', '#2ECC40', '#0074D9'],
                        gravity: 0.8,
                        startVelocity: 55
                    });
                }, i * 300);
            }
            // –ü–æ–∫–∞–∑—É—î–º–æ –Ω–∞–≥–æ—Ä–æ–¥—É
            showReward();
        }, 1000);
    }
}

function showReward() {
    const reward = document.createElement('div');
    reward.className = 'reward';
    reward.innerHTML = `
        <div class="reward-content">
            <h2>üèÜ –í—ñ—Ç–∞—î–º–æ! üèÜ</h2>
            <p>–¢–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–≤ –≤—Å—ñ —Ä—ñ–≤–Ω—ñ!</p>
            <div class="medal">üåü</div>
            <button class="reward-btn">–ß—É–¥–æ–≤–æ!</button>
        </div>
    `;

    document.body.appendChild(reward);

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏
    const closeBtn = reward.querySelector('.reward-btn');
    closeBtn.addEventListener('click', () => {
        reward.classList.add('fade-out');
        setTimeout(() => {
            reward.remove();
            confetti({
                particleCount: 300,
                spread: 180,
                origin: { y: 0.7 },
                gravity: 0.8,
                startVelocity: 45,
                colors: ['#FFD700', '#FFA500', '#FF4136', '#2ECC40', '#0074D9']
            });
        }, 500);
    });

    showGnomeSpeech('–í—ñ—Ç–∞—é! –¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å! üéâüåü');
}

function updateLevelButtons() {
    // –û–Ω–æ–≤–ª—é—î–º–æ –∑–≤–∏—á–∞–π–Ω—ñ —Ä—ñ–≤–Ω—ñ
    for (let i = 1; i <= 4; i++) {
        const button = document.querySelector(`button[onclick="toggleLevel(${i})"]`);
        if (button) {  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
            if (i === 1 || levelProgress[i - 1]) {
                button.classList.remove('disabled');
            } else {
                button.classList.add('disabled');
            }
        }
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É —Ä—É—Ö–∞–Ω–∫–∏
    const sportButton = document.querySelector(`button[onclick="toggleLevel('sport')"]`);
    if (sportButton) {  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
        if (levelProgress[3]) { // –Ø–∫—â–æ –ø—Ä–æ–π–¥–µ–Ω–∏–π 3-–π —Ä—ñ–≤–µ–Ω—å
            sportButton.classList.remove('disabled');
        } else {
            sportButton.classList.add('disabled');
        }
    }
}

function showGnomeSpeech(message) {
    const speechBubble = document.getElementById('gnomeSpeech');
    speechBubble.textContent = message;
    speechBubble.classList.add('active');
    
    setTimeout(() => {
        speechBubble.classList.remove('active');
    }, 3000);
}

// –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó HEX –≤ RGB
function hexToRgb(hex) {
    const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

document.addEventListener('DOMContentLoaded', updateLevelButtons); 
